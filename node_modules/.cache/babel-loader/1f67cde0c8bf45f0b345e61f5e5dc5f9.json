{"ast":null,"code":"import api from '../api/api';\nimport { GET_REPOSITORIES } from './repositories.conts';\nexport const getItem = () => {\n  // @ts-ignore\n  return (dispatch, getState) => {\n    console.log(\"getItem -> dispatch\", dispatch);\n    api('https://api.github.com/repositories').then(res => {\n      dispatch(addTodoSuccess(res));\n    }).catch(err => {\n      dispatch(addTodoFailure(err.message));\n    });\n  };\n}; // @ts-ignore\n\nconst addTodoSuccess = item => ({\n  type: GET_REPOSITORIES,\n  payload: { ...item\n  }\n});\n\nconst addTodoStarted = () => ({\n  type: 'ADD_TODO_STARTED'\n}); // @ts-ignore\n\n\nconst addTodoFailure = error => ({\n  type: 'ADD_TODO_FAILURE',\n  payload: {\n    error\n  }\n});","map":{"version":3,"sources":["/home/yevgen/project/react-git-search-app/src/repositories/repositories.actions.ts"],"names":["api","GET_REPOSITORIES","getItem","dispatch","getState","console","log","then","res","addTodoSuccess","catch","err","addTodoFailure","message","item","type","payload","addTodoStarted","error"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AAEA,SAASC,gBAAT,QAAiC,sBAAjC;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB;AACA,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,QAAnC;AAEAH,IAAAA,GAAG,CAAC,qCAAD,CAAH,CACKO,IADL,CACUC,GAAG,IAAI;AACTL,MAAAA,QAAQ,CAACM,cAAc,CAACD,GAAD,CAAf,CAAR;AACH,KAHL,EAIKE,KAJL,CAIWC,GAAG,IAAI;AACVR,MAAAA,QAAQ,CAACS,cAAc,CAACD,GAAG,CAACE,OAAL,CAAf,CAAR;AACH,KANL;AAOH,GAVD;AAWH,CAbM,C,CAeP;;AACA,MAAMJ,cAAc,GAAGK,IAAI,KAAK;AAC5BC,EAAAA,IAAI,EAAEd,gBADsB;AAE5Be,EAAAA,OAAO,EAAE,EACL,GAAGF;AADE;AAFmB,CAAL,CAA3B;;AAOA,MAAMG,cAAc,GAAG,OAAO;AAC1BF,EAAAA,IAAI,EAAE;AADoB,CAAP,CAAvB,C,CAIA;;;AACA,MAAMH,cAAc,GAAGM,KAAK,KAAK;AAC7BH,EAAAA,IAAI,EAAE,kBADuB;AAE7BC,EAAAA,OAAO,EAAE;AACLE,IAAAA;AADK;AAFoB,CAAL,CAA5B","sourcesContent":["import api from '../api/api';\n\nimport { GET_REPOSITORIES } from './repositories.conts';\n\n\nexport const getItem = () => {\n    // @ts-ignore\n    return (dispatch, getState) => {\n        console.log(\"getItem -> dispatch\", dispatch)\n\n        api('https://api.github.com/repositories')\n            .then(res => {\n                dispatch(addTodoSuccess(res));\n            })\n            .catch(err => {\n                dispatch(addTodoFailure(err.message));\n            });\n    };\n};\n\n// @ts-ignore\nconst addTodoSuccess = item => ({\n    type: GET_REPOSITORIES,\n    payload: {\n        ...item\n    }\n});\n\nconst addTodoStarted = () => ({\n    type: 'ADD_TODO_STARTED'\n});\n\n// @ts-ignore\nconst addTodoFailure = error => ({\n    type: 'ADD_TODO_FAILURE',\n    payload: {\n        error\n    }\n});"]},"metadata":{},"sourceType":"module"}